david96, itzhak
David Rotenberg (315518175), Itzhak Stern (302789722)
EX: 2

FILES:
Threads.h -- declaration of the threads class
Threads.cpp -- the implementation of the threads class
uthreads.cpp -- the implementation of the uthreads library functions
README -- this file

REMARKS:
This library implementat a user level threads

ANSWERS:

Q1:
So suppose we have a program and inside the program we have a few functions that does not require any 
System call and we want to use them while the program is running, in this case we think that user level
threads is quite useful. the reason for that is that the in these specific case kernel level threads will
cost us more overhead that does not require and we will not benefit from it.   

Q2:
advantages: 
	1. Process ran on his own space so he can use global variables freely.
	2. When one tub shutdown/exit it does not impact on the others.
disadvantages:
	1. It require more space and resources(code duplication).
	2. finish and start process is mach more expansive.
	3. Process depends on the operation system, so it needs to be coordinated.

Q3:
During the execution the following action occur:
1 the keyboard send interrupt to the operation system and the operation system send the information
  to shell (hardware interrupt)
2 the shell send trap and the operation system makes the desired system call
3 the operation system send trap to the program and ask the program to finish is runinng, if the
  program know who to do it he does, if not the operation system stops is running.

Q4:
"Virtual time" is the time the process run actually on the CPU without considering the time that
was spant on whiting for e.g I/O ..
"Real time" is the time which was actually spant since the process was started until he terminate.
Example of using virtual time is in our program, which we want to share our time in the CPU equally
between the threads.
Example of using real time is when we want to execute code in X time. For example if we want the operation
system to check something in one hour. 













